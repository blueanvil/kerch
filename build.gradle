buildscript {
    apply from: 'dependencies.gradle'
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.70'
    id 'java-library'
    id 'jacoco'
    id 'org.jetbrains.dokka' version '0.10.1'
    id 'com.github.kt3k.coveralls' version '2.8.4'
}

group = 'com.blueanvil'
version = '1.0.30'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    compile "org.elasticsearch.client:elasticsearch-rest-high-level-client:$elasticSearchVersion"
    compile "org.reflections:reflections:$reflectionsVersion"

    testCompile "junit:junit:$junitVersion"
    testCompile "org.slf4j:slf4j-log4j12:$slf4jVersion"
    testCompile "com.github.javafaker:javafaker:$javaFakerVersion"
    testCompile "commons-io:commons-io:$commonsIoVersion"
    testCompile "khttp:khttp:0.1.0"
    testCompile "org.json:json:20170516"
}

dokka {
    outputFormat = 'html'
    outputDirectory = "etc/dokka"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}


task runTools(type: Exec) {
    commandLine './start-tools.sh'
}

task stopTools(type: Exec) {
    commandLine './stop-tools.sh'
}

tasks.test.dependsOn("runTools")

test {
    useTestNG()
    finalizedBy stopTools
}

coveralls {
    sourceDirs += ['src/main/kotlin']
    jacocoReportPath 'build/reports/jacoco/test/jacocoTestReport.xml'
}
